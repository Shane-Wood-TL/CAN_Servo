#include "all_includes.h"


#ifndef  __CAN_ENDPOINTS__
#define __CAN_ENDPOINTS__
//      endpoint id                 data length (bytes)     read/write

#define RXGEN_OFFSET_SW 1
#define RXGEN_OFFSET_SW 1


#define NODE_ID_ENDPOINT_SW 0          //1                      r
#define NODE_ID_ENDPOINT_LENGTH_SW 1

#define RECEIVE_ALL_ENDPOINT_SW 1
#define RECEIVE_ALL_ENDPOINT_LENGTH_SW 1

#define VERSION_MAJOR_ENDPOINT_SW 2    //read only
#define VERSION_MAJOR_ENDPOINT_LENGTH_SW 1

#define VERSION_MINOR_ENDPOINT_SW 3    //read only
#define VERSION_MINOR_ENDPOINT_LENGTH_SW 1

#define MOTOR_STATUS_ENDPOINT_SW 4
#define MOTOR_STATUS_ENDPOINT_LENGTH_SW 1

#define MOTOR_MODE_ENDPOINT_SW 5
#define MOTOR_MODE_ENDPOINT_LENGTH_SW 1

#define LAST_CURRENT_DRAW_ENDPOINT_SW 6 //last_current_draw, 4
#define LAST_CURRENT_DRAW_ENDPOINT_LENGTH_SW 4

#define MAX_CURRENT_DRAW_ENDPOINT_SW 7 //max_current_draw, 4
#define MAX_CURRENT_DRAW_ENDPOINT_LENGTH_SW 4

#define CURRENT_LIMIT_VALUE_ENDPOINT_SW 8 //current_limit_value, 4
#define CURRENT_LIMIT_VALUE_ENDPOINT_LENGTH_SW 4

#define LAST_MOTOR_TEMPERATURE_ENDPOINT_SW 9 //last_motor_temperature, 4
#define LAST_MOTOR_TEMPERATURE_ENDPOINT_LENGTH_SW 4

#define MAX_MOTOR_TEMPERATURE_ENDPOINT_SW 10 //max_motor_temperature, 4
#define MAX_MOTOR_TEMPERATURE_ENDPOINT_LENGTH_SW 4

#define MOTOR_TEMPERATURE_LIMIT_ENDPOINT_SW 11 //motor_temperature_limit, 4
#define MOTOR_TEMPERATURE_LIMIT_ENDPOINT_LENGTH_SW 4

#define MOTOR_OFFSET_VALUE_ENDPOINT_SW 12 //motor_offset_value, 4
#define MOTOR_OFFSET_VALUE_ENDPOINT_LENGTH_SW 4

#define TARGET_ANGLE_ENDPOINT_SW 13 //target_angle, 4
#define TARGET_ANGLE_ENDPOINT_LENGTH_SW 4

#define TARGET_VELOCITY_ENDPOINT_SW 14 //target_velocity, 4
#define TARGET_VELOCITY_ENDPOINT_LENGTH_SW 4

#define CURRENT_ANGLE_ENDPOINT_SW 15 //current_angle, 4
#define CURRENT_ANGLE_ENDPOINT_LENGTH_SW 4

#define CURRENT_VELOCITY_ENDPOINT_SW 16 //current_velocity, 4
#define CURRENT_VELOCITY_ENDPOINT_LENGTH_SW 4

#define PID_P_ENDPOINT_SW 17 //pid_P, 4
#define PID_P_ENDPOINT_LENGTH_SW 4

#define PID_I_ENDPOINT_SW 18 //pid_I, 4
#define PID_I_ENDPOINT_LENGTH_SW 4

#define PID_D_ENDPOINT_SW 19 //pid_D, 4
#define PID_D_ENDPOINT_LENGTH_SW 4

#define LED_R_ENDPOINT_SW 20 //led_r, 4
#define LED_R_ENDPOINT_LENGTH_SW 1

#define LED_G_ENDPOINT_SW 21 //led_g, 4
#define LED_G_ENDPOINT_LENGTH_SW 1

#define LED_B_ENDPOINT_SW 22 //led_b, 4
#define LED_B_ENDPOINT_LENGTH_SW 1


enum endpoint_rw_SW{READ_SW, WRITE_SW, READ_WRITE_SW};
typedef struct endpoint_structure_sw{
    uint8_t id;
    uint8_t data_length;
    endpoint_rw_SW READ_WRITE_SW;
} endpoint_structure_sw;

#define ENDPOINT_COUNT_SW 23
endpoint_structure_sw endpoint_list[ENDPOINT_COUNT_SW] = {
    {NODE_ID_ENDPOINT_SW,                 NODE_ID_ENDPOINT_LENGTH_SW,                 READ_SW},
    {RECEIVE_ALL_ENDPOINT_SW,             RECEIVE_ALL_ENDPOINT_LENGTH_SW,             READ_SW},
    {VERSION_MAJOR_ENDPOINT_SW,           VERSION_MAJOR_ENDPOINT_LENGTH_SW,           READ_SW},
    {VERSION_MINOR_ENDPOINT_SW,           VERSION_MINOR_ENDPOINT_LENGTH_SW,           READ_SW},
    {MOTOR_STATUS_ENDPOINT_SW,            MOTOR_STATUS_ENDPOINT_LENGTH_SW,            READ_WRITE_SW},
    {MOTOR_MODE_ENDPOINT_SW,              MOTOR_MODE_ENDPOINT_LENGTH_SW,              READ_WRITE_SW},
    {LAST_CURRENT_DRAW_ENDPOINT_SW,       LAST_CURRENT_DRAW_ENDPOINT_LENGTH_SW,       READ_SW},
    {MAX_CURRENT_DRAW_ENDPOINT_SW,        MAX_CURRENT_DRAW_ENDPOINT_LENGTH_SW,        READ_WRITE_SW},
    {CURRENT_LIMIT_VALUE_ENDPOINT_SW,     CURRENT_LIMIT_VALUE_ENDPOINT_LENGTH_SW,     READ_WRITE_SW},
    {LAST_MOTOR_TEMPERATURE_ENDPOINT_SW,  LAST_MOTOR_TEMPERATURE_ENDPOINT_LENGTH_SW,  READ_SW},
    {MAX_MOTOR_TEMPERATURE_ENDPOINT_SW,   MAX_MOTOR_TEMPERATURE_ENDPOINT_LENGTH_SW,   READ_WRITE_SW},
    {MOTOR_TEMPERATURE_LIMIT_ENDPOINT_SW, MOTOR_TEMPERATURE_LIMIT_ENDPOINT_LENGTH_SW, READ_WRITE_SW},
    {MOTOR_OFFSET_VALUE_ENDPOINT_SW,      MOTOR_OFFSET_VALUE_ENDPOINT_LENGTH_SW,      READ_WRITE_SW},
    {TARGET_ANGLE_ENDPOINT_SW,            TARGET_ANGLE_ENDPOINT_LENGTH_SW,            READ_WRITE_SW},
    {TARGET_VELOCITY_ENDPOINT_SW,         TARGET_VELOCITY_ENDPOINT_LENGTH_SW,         READ_WRITE_SW},
    {CURRENT_ANGLE_ENDPOINT_SW,           CURRENT_ANGLE_ENDPOINT_LENGTH_SW,           READ_SW},
    {CURRENT_VELOCITY_ENDPOINT_SW,        CURRENT_VELOCITY_ENDPOINT_LENGTH_SW,        READ_SW},
    {PID_P_ENDPOINT_SW,                   PID_P_ENDPOINT_LENGTH_SW,                   READ_WRITE_SW},
    {PID_I_ENDPOINT_SW,                   PID_I_ENDPOINT_LENGTH_SW,                   READ_WRITE_SW},
    {PID_D_ENDPOINT_SW,                   PID_D_ENDPOINT_LENGTH_SW,                   READ_WRITE_SW},
    {LED_R_ENDPOINT_SW,                   LED_R_ENDPOINT_LENGTH_SW,                   READ_WRITE_SW},
    {LED_G_ENDPOINT_SW,                   LED_G_ENDPOINT_LENGTH_SW,                   READ_WRITE_SW},
    {LED_B_ENDPOINT_SW,                   LED_B_ENDPOINT_SW,                          READ_WRITE_SW},
}

#endif
