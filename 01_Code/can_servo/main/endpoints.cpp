#include "../include/CAN_endpoints.h"

endpoint_structure endpoint_list[ENDPOINT_COUNT] = {
    {NODE_ID_ENDPOINT,                 NODE_ID_ENDPOINT_LENGTH,                 READ},
    {RECEIVE_ALL_ENDPOINT,             RECEIVE_ALL_ENDPOINT_LENGTH,             READ},
    {VERSION_MAJOR_ENDPOINT,           VERSION_MAJOR_ENDPOINT_LENGTH,           READ},
    {VERSION_MINOR_ENDPOINT,           VERSION_MINOR_ENDPOINT_LENGTH,           READ},
    {MOTOR_STATUS_ENDPOINT,            MOTOR_STATUS_ENDPOINT_LENGTH,            READ_WRITE},
    {MOTOR_MODE_ENDPOINT,              MOTOR_MODE_ENDPOINT_LENGTH,              READ_WRITE},
    {LAST_CURRENT_DRAW_ENDPOINT,       LAST_CURRENT_DRAW_ENDPOINT_LENGTH,       READ},
    {MAX_CURRENT_DRAW_ENDPOINT,        MAX_CURRENT_DRAW_ENDPOINT_LENGTH,        READ_WRITE},
    {CURRENT_LIMIT_VALUE_ENDPOINT,     CURRENT_LIMIT_VALUE_ENDPOINT_LENGTH,     READ_WRITE},
    {LAST_MOTOR_TEMPERATURE_ENDPOINT,  LAST_MOTOR_TEMPERATURE_ENDPOINT_LENGTH,  READ},
    {MAX_MOTOR_TEMPERATURE_ENDPOINT,   MAX_MOTOR_TEMPERATURE_ENDPOINT_LENGTH,   READ_WRITE},
    {MOTOR_TEMPERATURE_LIMIT_ENDPOINT, MOTOR_TEMPERATURE_LIMIT_ENDPOINT_LENGTH, READ_WRITE},
    {MOTOR_OFFSET_VALUE_ENDPOINT,      MOTOR_OFFSET_VALUE_ENDPOINT_LENGTH,      READ_WRITE},
    {TARGET_ANGLE_ENDPOINT,            TARGET_ANGLE_ENDPOINT_LENGTH,            READ_WRITE},
    {TARGET_VELOCITY_ENDPOINT,         TARGET_VELOCITY_ENDPOINT_LENGTH,         READ_WRITE},
    {CURRENT_ANGLE_ENDPOINT,           CURRENT_ANGLE_ENDPOINT_LENGTH,           READ},
    {CURRENT_VELOCITY_ENDPOINT,        CURRENT_VELOCITY_ENDPOINT_LENGTH,        READ},
    {PID_P_ENDPOINT,                   PID_P_ENDPOINT_LENGTH,                   READ_WRITE},
    {PID_I_ENDPOINT,                   PID_I_ENDPOINT_LENGTH,                   READ_WRITE},
    {PID_D_ENDPOINT,                   PID_D_ENDPOINT_LENGTH,                   READ_WRITE},
    {LED_R_ENDPOINT,                   LED_R_ENDPOINT_LENGTH,                   READ_WRITE},
    {LED_G_ENDPOINT,                   LED_G_ENDPOINT_LENGTH,                   READ_WRITE},
    {LED_B_ENDPOINT,                   LED_B_ENDPOINT,                          READ_WRITE},
};